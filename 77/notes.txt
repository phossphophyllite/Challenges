Structure:

1) Each layer contains node objects.
	a) Each node stores its inputs/outputs
	b) Can vectorize to perform entire layer operations 
	c) Importantly, each node is able to handle its own BP
2) Each layer knows its input/output layers
	a) Store the input layer(s)
	b) Store the output layer(s)
	c) Store input data, output data
3) Each layer contains functions to handle FF/BP updates


Referencing layers:
	Since there are non-linear connections, probably easiest to just reference generically with layer names. 
	Thus, each layer can be identified by the, helped with FF/BP connections.

Derivatives are all dependent on the type of function itself. I don't technically need to know the *definition* of the partial derivative within the layer - I only need to know the derivative itself.


Let's use adaptive pooling.

 
